[auth]
	# This is for the links a the bottom of login/join auth pages.
	or = "oder"
	join_link = "Account erstellen"
	login_link = "Anmelden"
	forgot_link = "Benutzername oder Passwort vergessen"

# /login
[auth.login]
	page_title = "Bei Game Jolt anmelden"

	twitter_button = "Mit Twitter anmelden"
	facebook_button = "Mit Facebook anmelden"

	username_label = "Benutzername"
	password_label = "Passwort"
	submit_button = "Anmelden"

	# Shows up if you enter an invalid user/password combination.
	invalid_login_error_html = "Falscher Benutzername oder falsches Passwort."

	# Login takes a while, so we show this for the loading text.
	# Can be quirky and fun! =]
	loading_message_count = "4"
	loading_message_1 = "Mit Mainframe verbinden..."
	loading_message_2 = "Alle Nachkommastellen von π berechnen..."
	loading_message_3 = "Spaßmodule werden aktiviert..."
	loading_message_4 = "Hoopla-Matrix wird projeziert..."

# /join
[auth.join]
	page_title = "Tritt Game Jolt bei - Die größte Sammlung von Indie-Spielen der Menschheit."

	twitter_button = "Mit Twitter anmelden"
	facebook_button = "Mit Facebook anmelden"

	# The lead text of the page.
	# Quirky and fun as it's the text to get them excited about signing up.
	# Let's try to keep it at 3 lines or less on the page.
	join_message_html_count = "2"
	join_message_html_1 = "Join us. Mwuahaha.<br>We have games.<br><strong><em>Mwuahahaha!</em></strong>"
	join_message_html_2 = "Komm mit auf eine Raketenreise in eine Supernova gemacht aus Spielen."

	email_label = "Email-Addresse"
	username_label = "Benutzername"
	password_label = "Passwort"

	submit_button = "Account erstellen"

# /join/almost
# After a successful sign up they land here.
# They still have to authorize their account.
[auth.join.almost]
	page_title = "Fast da!"
	heading = "@:auth.join.almost.page_title"
	body_html = """
    <p>Bevor Du dich bei Game Jolt anmelden kannst, musst Du die Email-Addresse deines Accounts verifizieren.</p>
    <p>Wir haben Dir eine Email mit einer Anleitung geschickt, wie Du deinen Account autorisieren kannst.</p>
	"""
	spam = "Wenn Du die Email nach 10 Minuten nicht siehst, sie im Spam-Ordner nach. Er könnte sie verschluckt haben."
	urgency = "Du hast eine Woche um deinen Account zu verifizieren. Danach wird er gelöscht und Du musst ihn erneut erstellen."

# You need to actually sign up to get a valid URL for this page.
# We only show a Growl on successful authorization and funnel off to the main site.
[auth.authorize]
	success_growl_title = "Account authorisiert"
	success_growl = "Du wirst nun zum Game Jolt Dashboard weitergeleitet."

# /authorize/169219/62b17036174c87ee503fe0ef2902c79d/2
# The page that shows when their authorization fails.
# They shouldn't get here unless they clicked the link again after authorizing. Or if they are trying to cheat something.
[auth.authorize.invalid]
	page_title = "Ungültiger Authorisierungscode"
	heading = "Ungültige Authorisierung"
	body_html = """
    <p>Dein Authorisierungscode ist ungültig.</p>
    <p>Stelle sicher, dass Du die komplette URL kopiert hast.</p>
	"""

# /forgot
[auth.forgot]
	page_title = "Anmeldeinformationen abrufen"
	heading = "@:auth.forgot.page_title"

	email_help = "Füge die Email-Adresse deines Accounts ein und wir schicken Dir deine Anmeldedaten zu."
	email_label = "Email-Adresse"
	submit_button = "Anmeldeinformationen abrufen"

	# If the email address they enter isn't a registered user, this shows up as an error message.
	invalid_email_error_html = """
    <p>Hmm, diese Email-Adresse ist nicht in unserem System. Vielleicht hast Du gar keinen <a href="/join">Account erstellt</a>?</p>
	"""

# /forgot/sent
# For after they fill out the "forgot" form.
[auth.forgot.sent]
	page_title = "Anmeldeinformationen gesendet"
	heading = "@:auth.forgot.sent.page_title"
	body_html = "<p>Wir haben die Anmeldeinformationen an die Email-Adresse gesendet, die Du eingegeben hast.</p>"
	spam = "Wenn Du die Email nach 10 Minuten nicht siehst, sie im Spam-Ordner nach. Er könnte sie verschluckt haben."

# The URL for this gets sent in an email when they fill out the forgot login credentials page.
[auth.reset_password]
	page_title = "Passwort zurücksetzen"
	heading = "@:auth.reset_password.page_title"

	password_help = "Wenn Du ein neues Passwort wünscht, trage hier ein neues ein."
	password_label = "Neues Passwort"
	submit_button = "Passwort zurücksetzen"

	# For when they successfully reset.
	# Will send them back to the login page after showing this Growl.
	success_growl_title = "Passwort wurde geändert"
	success_growl = "Dein Passwort wurde zurückgesetzt. Du kannst dich jetzt mit dem neuen anmelden."


#####################
# Linked Account Auth

[auth.linked_account]

	# When they get returned back to GJ from FB/Twitter, etc. we do some processing of the login/sign up.
	# This is a generic loading message while we're doing our work.
	loading_message = "Wird verarbeitet. Bitte warten..."

[auth.linked_account.facebook]

	# Generic failed message.
	failed_growl = "Kann nicht mit Facebook angemeldet werden."
	failed_growl_title = "Anmelden fehlgeschlagen"

	# For the rare case when FB doesn't give us an email address. This would be very rare if it did ever happen.
	no_email_growl = "Dein Facebook-Account hat keine Email-Adresse. Stelle sicher, dass eine Email-Adresse mit deinem Facebook-Account verknüpft ist."
	no_email_growl_title = "Oh nein!"

	# When someone tries to sign up with an FB account with an email address that exists on an existing GJ account.
	# In most cases this will probably be an accident where they signed up in the past
	# and then try signing up again with FB later on, but their email address is
	# registered on their old account.
	duplicate_email_growl = "Die Email-Adresse dieses Facebook-Accounts wird bereits benutzt. Vielleicht hast Du schon einen Account?"
	duplicate_email_growl_title = "Oh nein!"

	# After a successful FB sign up.
	created_growl =  "Dein Account wurde erstellt. Von jetzt an läuft's rund!"
	created_growl_title = "Account erstellt"

[auth.linked_account.twitter]

	# Generic failed message.
	failed_growl = "Kann nicht mit Twitter angemeldet werden."
	failed_growl_title = "Anmelden fehlgeschlagen"

	# When they submit the form and their account is set up with Twitter.
	created_growl =  "Dein Account wurde erstellt. Von jetzt an läuft's rund!"
	created_growl_title = "Account erstellt"

# /login/finalize-twitter
# They get directed here when they sign up with a new twitter account and we require their email address.
[auth.linked_account.twitter.finalize]
	page_title = "Email erforderlich"
	heading = "@:auth.linked_account.twitter.finalize.page_title"

	email_help = "Um die Anmeldung mit Twitter zu komplettieren, trage eine gültige Email-Adresse ein."
	email_label = "Email-Adresse"
	submit_button = "Anmeldung vervollständigen"

	# If they entered an email address that exists on another account.
	# In most cases this will probably be an accident where they signed up in the past
	# and then try signing up again with twitter later on, but their email address is
	# registered on their old account.
	duplicate_email_error_html = """
    <p>Die Email-Adresse, die Du eingegeben hast wird bereits genutzt.</p>
    <p>Wenn Du bereits einen Game Jolt Account besitzt, kannst Du dich <a href="/login">hier anmelden</a>.</p>
    <p>Wenn Du deine Anmeldeinformationen vergessen hast, kannst du sie <a href="/forgot">hier abrufen</a>.</p>
	"""
