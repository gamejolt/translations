[auth]
	# This is for the links a the bottom of login/join auth pages.
	or = "or"
	join_link = "Sign Up!"
	login_link = "Log In"
	forgot_link = "Forgot Username or Password"

# /login
[auth.login]
	page_title = "Log in to Game Jolt"

	twitter_button = "Log In With Twitter"
	facebook_button = "Log In With Facebook"

	username_label = "Username"
	password_label = "Password"
	submit_button = "Log In"

	# Shows up if you enter an invalid user/password combination.
	invalid_login_error_html = "Incorrect username or password."

	# Login takes a while, so we show this for the loading text.
	# Can be quirky and fun! =]
	loading_message_count = "4"
	loading_message_1 = "Connecting to mainframe..."
	loading_message_2 = "Calculating exact value of Ï€..."
	loading_message_3 = "Deploying amusement modules..."
	loading_message_4 = "Projecting hoopla matrix..."

# /join
[auth.join]
	page_title = "Join Game Jolt - The Largest Collection of Indie Games by People"

	twitter_button = "Sign Up With Twitter"
	facebook_button = "Sign Up With Facebook"

	# The lead text of the page.
	# Quirky and fun as it's the text to get them excited about signing up.
	# Let's try to keep it at 3 lines or less on the page.
	join_message_html_count = "2"
	join_message_html_1 = "Join us. Mwuahaha.<br>We have games.<br><strong><em>Mwuahahaha!</em></strong>"
	join_message_html_2 = "Join us for a rocketship ride into the heart of supernova made of games."

	email_label = "Email Address"
	username_label = "Username"
	password_label = "Password"

	submit_button = "Sign Up"

# /join/almost
# After a successful sign up they land here.
# They still have to authorize their account.
[auth.join.almost]
	page_title = "Almost there!"
	heading = "@:auth.join.almost.page_title"
	body_html = """
	<p>Before you can log in to Game Jolt, you need to verify the email address on your account.</p>
	<p>We've sent you an email with instructions on how to authorize your account.</p>
	"""
	spam = "If you don't see an email within 10 minutes, please check your spam folder. It might have gobbled it up."
	urgency = "Note that you have a week to authorize your account. After that, it will be deleted and you'll have to sign up again."

# You need to actually sign up to get a valid URL for this page.
# We only show a Growl on successful authorization and funnel off to the main site.
[auth.authorize]
	success_growl_title = "Account Authorized"
	success_growl = "We're redirecting you to your Game Jolt dashboard now."

# /authorize/169219/62b17036174c87ee503fe0ef2902c79d/2
# The page that shows when their authorization fails.
# They shouldn't get here unless they clicked the link again after authorizing. Or if they are trying to cheat something.
[auth.authorize.invalid]
	page_title = "Invalid Authorization Code"
	heading = "Invalid Authorization"
	body_html = """
	<p>Your authorization code is invalid.</p>
	<p>Please make sure to copy and paste the full URL that we emailed you.</p>
	"""

# /forgot
[auth.forgot]
	page_title = "Retrieve Login Credentials"
	heading = "@:auth.forgot.page_title"

	email_help = "Enter the email address on your account and we'll email your login credentials to you."
	email_label = "Email Address"
	submit_button = "Retrieve Credentials"

	# If the email address they enter isn't a registered user, this shows up as an error message.
	invalid_email_error_html = """
	<p>Hmm, that email address is not in our system. Maybe you didn't <a href="/join">sign up yet</a>?</p>
	"""

# /forgot/sent
# For after they fill out the "forgot" form.
[auth.forgot.sent]
	page_title = "Credentials Sent"
	heading = "@:auth.forgot.sent.page_title"
	body_html = "<p>We've sent your login credentials to the email address you entered.</p>"
	spam = "If you don't see our email within 10 minutes, please check your spam folder. It might have been gobbled up!"

# The URL for this gets sent in an email when they fill out the forgot login credentials page.
[auth.reset_password]
	page_title = "Reset Password"
	heading = "@:auth.reset_password.page_title"

	password_help = "If you'd like to reset your password, enter a new one below."
	password_label = "New Password"
	submit_button = "Reset Password"

	# For when they successfully reset.
	# Will send them back to the login page after showing this Growl.
	success_growl_title = "Password Changed"
	success_growl = "Your password has been reset. Now you can log in with your new one."


#####################
# Linked Account Auth

[auth.linked_account]

	# When they get returned back to GJ from FB/Twitter, etc. we do some processing of the login/sign up.
	# This is a generic loading message while we're doing our work.
	loading_message = "Processing. Please wait..."

[auth.linked_account.facebook]

	# Generic failed message.
	failed_growl = "Unable to log in with Facebook."
	failed_growl_title = "Login Failed"

	# For the rare case when FB doesn't give us an email address. This would be very rare if it did ever happen.
	no_email_growl = "Your Facebook account did not return an email address. Make sure you have verified it with Facebook."
	no_email_growl_title = "Oh no!"

	# When someone tries to sign up with an FB account with an email address that exists on an existing GJ account.
	# In most cases this will probably be an accident where they signed up in the past
	# and then try signing up again with FB later on, but their email address is
	# registered on their old account.
	duplicate_email_growl = "The email address on this Facebook account is already in use. Perhaps you already have an account?"
	duplicate_email_growl_title = "Oh no!"

	# After a successful FB sign up.
	created_growl = "Your account has been created. It's smooth sailing from here on out!"
	created_growl_title = "Account Created"

[auth.linked_account.twitter]

	# Generic failed message.
	failed_growl = "Unable to log in with Twitter."
	failed_growl_title = "Login Failed"

	# When they submit the form and their account is set up with Twitter.
	created_growl = "Your account has been created. It's smooth sailing from here on out!"
	created_growl_title = "Account Created"

# /login/finalize-twitter
# They get directed here when they sign up with a new twitter account and we require their email address.
[auth.linked_account.twitter.finalize]
	page_title = "Email Required"
	heading = "@:auth.linked_account.twitter.finalize.page_title"

	email_help = "To finish logging in with Twitter, please enter a valid email address."
	email_label = "Email Address"
	submit_button = "Complete Sign Up"

	# If they entered an email address that exists on another account.
	# In most cases this will probably be an accident where they signed up in the past
	# and then try signing up again with twitter later on, but their email address is
	# registered on their old account.
	duplicate_email_error_html = """
	<p>The email address you entered is already in use.</p>
	<p>If you already have a Game Jolt account you can <a href="/login">log in here</a>.</p>
	<p>If you've forgotten your login information, you can <a href="/forgot">retrieve it here</a>.</p>
	"""
